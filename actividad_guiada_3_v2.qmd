---
title: "Anomalías de los volumenes en embalses de España"
subtitle: "Actividad Guiada 2"
author: "Jhon Carlos Solis Ochoa"
format: 
  html:
   embed-resources: true
editor: source
---

**Objetivo**: Mostrar a nivel nacional y por cuenca el número de embalses con sus respectivos anomalías del volumen de agua embalsada en percentiles.

## Paquetes

```{r}
#| message: false
#| warning: false

# instalamos los paquetes si hace falta
if(!require("tidyverse")) install.packages("tidyverse")
if(!require("janitor")) install.packages("janitor")
if(!require("patchwork")) install.packages("patchwork")
if(!require("RODBC")) install.packages("RODBC")

# paquetes
library(tidyverse)
library(readxl)
library(janitor)
library(patchwork)
library(RODBC)
```

## Descarga y importación de datos

```{r}
# URL base de datos
url <- "https://www.miteco.gob.es/content/dam/miteco/es/agua/temas/evaluacion-de-los-recursos-hidricos/boletin-hidrologico/Historico-de-embalses/BD-Embalses.zip"

# descarga
tempf <- tempfile() # archivo temporal
download.file(url, tempf) 
unzip(tempf) # descomprimimos

# abrimos conexión con la mdb
conn <- odbcConnectAccess2007("BD-Embalses.mdb")

# leemos las tablas disponibles
subset(sqlTables(conn), TABLE_TYPE == "TABLE") 

# importamos la tabla
emb <- sqlFetch(conn, "T_Datos Embalses 1988-2024") 
```

## Preparación de los datos

```{r}
# limpiamos los nombres de columnas + convertimos en númerico columnas con nombre agua
#  + convertimos la fecha en clase Date
emb <- clean_names(emb) %>% 
           mutate(across(starts_with("agua"), 
                  ~ parse_number(., locale = locale(decimal_mark = ","))), 
                  fecha = ymd(fecha))
# data structure
str(emb) # datos semanales
```

```{r}
# conversión del agua embalsada en percentiles
ecdf2 <- function(d) ecdf(d)(d)

# ejemplo
ecdf2(rnorm(100, 15, 20)) * 100

# nueva columna agua embalsada en percentiles
emb <- group_by(emb, embalse_nombre) %>%
          mutate(agua_perc = ecdf2(agua_actual))
head(emb)
```

## Nivel nacional

```{r}
# definiciones clases
percentile_breaks = c(0, 0.05, 0.1, 0.25, .4, .6, .75, 0.9, 0.95, 1)

# añadimos el año hidrologico Oct - Sep
emb <- mutate(emb, hy = ifelse(month(fecha) > 9, year(fecha)+1, year(fecha)))

# filtramos el año actual
res_nacional <- filter(emb, hy == 2024) %>% 
                  mutate(agua_cat = cut(agua_perc, 
                                        percentile_breaks, 
                                        include.lowest = TRUE)) %>% 
                  group_by(fecha, .drop = FALSE) %>% 
                  count(agua_cat) 

head(res_nacional, 10)

# clases de agua 
lev_agua <- levels(res_nacional$agua_cat)

# complementamos el conteo de 0 
# calculmaos el número de embalses en %
res_nacional <- mutate(res_nacional, 
                       rel = n/sum(n), 
                       agua_cat = factor(agua_cat, lev_agua))

head(res_nacional, 10)
```

¿Cuántos embalses son más seco de lo normal?

```{r}
ymin_actual <- ungroup(res_nacional) %>%
                filter(fecha == max(fecha)) %>% 
                  arrange(agua_cat) %>%
                    pull(rel) %>% 
                       .[1:4] %>% 
                         sum()
ymin_actual * 100
```

### A nivel nacional

```{r}
#| fig-height: 6
g0 <- ggplot(res_nacional, 
            aes(fecha, rel, fill = agua_cat)) +
         geom_area() 


g1 <- g0 + annotate("linerange", 
                   x = max(res_nacional$fecha) + days(4), 
                   linewidth = .6,
                   ymax = 1, 
                   ymin = 1-ymin_actual) +
           annotate("text", 
                     x = max(res_nacional$fecha) + days(25),
                     y = .95,
                     label = scales::percent(ymin_actual, 1)) +
           annotate("text", 
                    x = ymd("2024-02-10"), 
                    y = .52,
                    label = "normal",
                    fontface = "bold") 

g2 <- g1  + scale_fill_brewer(palette = "BrBG",
                             labels = ~ scales::number(., scale = 100),
                             guide = guide_colorsteps()) +
            scale_x_date(breaks = seq(ymd("2023-11-01"), ymd("2024-10-01"), "2 month"),
                         date_labels = "%b %y") +
            scale_y_continuous(breaks = c(0, .25, .5, .75, 1),
                               labels = scales::label_percent()) +
            labs(x = NULL, 
                 y = "Proporción de embalses", 
                 fill = "Percentil",
                 title = "Nacional",
                 tag = str_wrap("más seco de lo normal", 10)) +
            coord_cartesian(expand = FALSE,
                            clip = "off") +
                  theme_minimal() +
                  theme(panel.grid = element_blank(),
                        legend.margin = margin(),
                        legend.ticks = element_line(color = "black", linewidth = .8),
                        legend.title.position = "top",
                        legend.title = element_text(hjust = 0),
                        legend.position = "bottom",
                        legend.direction = "horizontal",
                        legend.justification = .1,
                        legend.key.height = unit(0.3, "lines"),
                        legend.key.width = unit(3, "lines"),
                        plot.tag.position = c(1,.9),
                        plot.tag = element_text(size = 8),
                        axis.ticks.length = unit(.5, "mm"),
                        plot.title = element_text(size = 14, vjust = -3, 
                                                  margin = margin()),
                        axis.ticks = element_line(),
                        plot.margin = margin(10, 10, 20, 10),
                        aspect.ratio = 1)

g2
```

## Nivel cuencas hidrográficas

```{r}
# agrupar por cuenca del año 2024
res_cuenca <- filter(emb, hy == 2024) %>% 
                mutate(agua_cat = cut(agua_perc,
                                      percentile_breaks, 
                                      include.lowest = TRUE)) %>% 
                group_by(ambito_nombre, fecha, .drop = FALSE) %>% 
                count(agua_cat)
  
# complementar todas las combinaciones de conteo
res_cuenca <- mutate(res_cuenca, 
                       rel = n/sum(n),
                       agua_cat = factor(agua_cat, lev_agua),
                       nembalses = sum(n))

# excluimos cuencas con menos de 10 embalses
res_cuenca_sel <- filter(res_cuenca, nembalses >= 10)

# fijamos el orden 
ord <- unique(res_cuenca_sel$ambito_nombre)
ord <- ord[c(4, 8, 2:3, 10, 6:7, 5, 9, 1)]

res_cuenca_sel <- mutate(res_cuenca_sel,
                         ambito_nombre = factor(ambito_nombre, ord))
```

```{r}
#| fig-height: 6
#| fig-width: 13

# parte basica
p0 <- ggplot(res_cuenca_sel,
       aes(fecha, rel, 
           fill = agua_cat)) +
      geom_area()

# añadimos ajustes en scales
p1 <- p0 + scale_fill_brewer(palette = "BrBG", guide = guide_colorsteps()) +
           scale_x_date(breaks = seq(ymd("2023-11-01"), ymd("2024-10-01"), "3 month"),
                       date_labels = "%b",
                       expand = expansion(0)) +
           scale_y_continuous(breaks = c(0, .25, .5, .75, 1),
                              labels = ~scales::number(., scale = 100),
                              expand = expansion()) +
           facet_wrap(ambito_nombre~., ncol = 5,
                     scales = "free_x", 
                     labeller = labeller(ambito_nombre = label_wrap_gen(width = 20, 
                                                            multi_line = TRUE)))

# ajustes de estilo
p2 <- p1 + labs(x = NULL, y = NULL, fill = NULL) +
             coord_cartesian(clip = "off") +
              theme_minimal() +
              theme(panel.grid = element_blank(),
                    panel.spacing.x = unit(1, "lines"),
                    legend.position = "none",
                    axis.text.y = element_blank(),
                    axis.ticks.length = unit(.5, "mm"),
                    strip.text = element_text(face = "bold"),
                    strip.clip = "off",
                    axis.ticks = element_line(),
                    aspect.ratio = 1)

p2 # pequeños multiples
```

```{r}
#| fig-height: 6
#| fig-width: 12

# fecha ultima actualización
update_date <- format(max(res_nacional$fecha), "%d %B %Y")

# patrón de combinación
pattern <- 'AB'

# construcción final
final <- wrap_plots(A = g2, B = p2, design = pattern) + 
  plot_annotation(title = "EMBALSES 2023-2024",   # titulo global
                  subtitle = str_glue("Actualizado el {update_date}"),
                  caption = "Dominic Royé (@dr_xeo) | Datos: MITECO",
                  theme = theme(plot.title = element_text(size = 25, 
                                                          hjust = .5,
                                                          colour = "#01665e",
                                                          face = "bold",
                                                          margin = margin(10, 5,
                                                                              5, 5)),
                                plot.subtitle = element_text(hjust = 0,
                                                             vjust = 24,
                                                             size = 8),
                                plot.caption = element_text(hjust = 0, size = 8))) 


final
```

```{r}
# exportamos
ggsave("embasles.png", final, 
       height = 6, width = 12,
       units = "in",
       bg = "white")
```

## Gráfico del año hidrologico 1994-1995

```{r}

# definiciones clases
percentile_breaks = c(0, 0.05, 0.1, 0.25, .4, .6, .75, 0.9, 0.95, 1)

# filtramos el año actual
res_nacional <- filter(emb, hy == 1995) %>% 
                  mutate(agua_cat = cut(agua_perc, 
                                        percentile_breaks, 
                                        include.lowest = TRUE)) %>% 
                  group_by(fecha, .drop = FALSE) %>% 
                  count(agua_cat) 

head(res_nacional, 10)

# clases de agua 
lev_agua <- levels(res_nacional$agua_cat)

# complementamos el conteo de 0 
# calculmaos el número de embalses en %
res_nacional <- mutate(res_nacional, 
                       rel = n/sum(n), 
                       agua_cat = factor(agua_cat, lev_agua))

head(res_nacional, 10)

```

```{r}
ymin_actual <- ungroup(res_nacional) %>%
                filter(fecha == max(fecha)) %>% 
                  arrange(agua_cat) %>%
                    pull(rel) %>% 
                       .[1:4] %>% 
                         sum()
ymin_actual * 100
print(ymin_actual)
```

```{r}
#| fig-height: 6
# Gráfico principal
g0 <- ggplot(res_nacional, aes(fecha, rel, fill = agua_cat)) +
         geom_area()


```

```{r}

g1 <- g0 + annotate("linerange", 
                   x = max(res_nacional$fecha) + days(4), 
                   linewidth = .6,
                   ymax = 1, 
                   ymin = 1-ymin_actual) +
           annotate("text", 
                     x = max(res_nacional$fecha) + days(25),
                     y = .95,
                     label = scales::percent(ymin_actual, 1))  +
           annotate("text", 
                    x = ymd("1995-03-15"), 
                    y = .44,
                    label = "normal",
                    fontface = "bold") 

g2 <- g1 + 
      scale_fill_brewer(palette = "BrBG",
                        labels = ~ scales::number(., scale = 100),
                        guide = guide_colorsteps()) +
      scale_x_date(breaks = seq(ymd("1994-11-01"), ymd("1995-10-01"), "2 month"),
                   date_labels = "%b %y") +
      scale_y_continuous(breaks = c(0, .25, .5, .75, 1),
                         labels = scales::label_percent()) +
      labs(x = NULL, 
           y = "Proporción de embalses", 
           fill = "Percentil",
           title = "Nacional",
           tag = str_wrap("más seco de lo normal", 10)) +
      coord_cartesian(expand = FALSE, clip = "off") +
      theme_minimal() +
      theme(panel.grid = element_blank(),
            legend.margin = margin(),
            legend.ticks = element_line(color = "black", linewidth = .8),
            legend.title.position = "top",
            legend.title = element_text(hjust = 0),
            legend.position = "bottom",
            legend.direction = "horizontal",
            legend.justification = .5,
            legend.key.height = unit(0.3, "lines"),
            legend.key.width = unit(3, "lines"),
            plot.tag.position = c(1, 0.82),  
            plot.tag = element_text(size = 8),
            axis.ticks.length = unit(.5, "mm"),
            plot.title = element_text(size = 14, color = "white",  
                                      vjust = -3.5,      
                                      hjust = 0.02,
                                      margin = margin()),
            axis.ticks = element_line(),
            plot.margin = margin(10, 10, 20, 10),
            aspect.ratio = 0.6)

g2


```

## Múltiples pequeños a nivel nacional de toda la serie temporal

```{r}
colnames(emb)
```

```{r}
# Agrupar por año hidrobiológico (ey) desde 1989 hasta 2024
res_ey <- filter(emb, hy >= 1989 & hy <= 2024) %>% 
                mutate(agua_cat = cut(agua_perc,
                                      percentile_breaks, 
                                      include.lowest = TRUE)) %>% 
                group_by(hy, fecha, .drop = FALSE) %>% 
                count(agua_cat)
  
# Complementar todas las combinaciones de conteo
res_ey <- mutate(res_ey, 
                       rel = n/sum(n),
                       agua_cat = factor(agua_cat, lev_agua),
                       nyears = sum(n))

# Fijar el orden de los años
ord_ey <- unique(res_ey$hy)
ord_ey <- ord_ey[order(ord_ey)]

res_ey_sel <- mutate(res_ey,
                         hy = factor(hy, ord_ey))
```

```{r}
#| fig-height: 12
#| fig-width: 8

# Parte básica
p0 <- ggplot(res_ey_sel,
       aes(fecha, rel, 
           fill = agua_cat)) +
      geom_area()

# Añadimos ajustes en scales
p1 <- p0 + scale_fill_brewer(palette = "BrBG", guide = guide_colorsteps()) +
           scale_x_date(breaks = seq(ymd("1988-11-01"), ymd("2024-10-01"), "3 month"),
                       date_labels = "%b",
                       expand = expansion(0)) +
           scale_y_continuous(breaks = c(0, .25, .5, .75, 1),
                              labels = ~scales::number(., scale = 100),
                              expand = expansion()) +
           facet_wrap(hy~., ncol = 6, 
                     scales = "free_x", 
                     labeller = labeller(hy = label_wrap_gen(width = 20, 
                                                            multi_line = TRUE)))

# Ajustes de estilo
p2 <- p1 + labs(x = NULL, y = NULL, fill = NULL) +
             coord_cartesian(clip = "off") +
              theme_minimal() +
              theme(panel.grid = element_blank(),
                    panel.spacing.x = unit(1, "lines"),
                    legend.position = "none",
                    axis.text.y = element_blank(),
                    axis.ticks.length = unit(.5, "mm"),
                    strip.text = element_text(face = "bold"),
                    strip.clip = "off",
                    axis.ticks = element_line(),
                    aspect.ratio = 1)

#p2 <- p2 + theme(aspect.ratio = 1)

p2  # Visualización final con 6 columnas
```

## BONOS. Gráfico polar a nivel nacional

```{r}
# añadimos el año hidrologico Oct - Sep
emb <- mutate(emb, hy = ifelse(month(fecha) > 9, year(fecha)+1, year(fecha)))
emb <- mutate(emb, porcentaje_faltante = (1 - agua_perc) * 100)

ahidrobiologico <- 2020

cuenca_con_mas_embalses <- emb %>%
  group_by(ambito_nombre) %>%
  summarize(num_embalses = n_distinct(embalse_nombre)) %>%
  arrange(desc(num_embalses)) %>%
  slice(1) %>%
  pull(ambito_nombre)


filtrada <- filter(emb, hy == ahidrobiologico & ambito_nombre == cuenca_con_mas_embalses) %>% 
                  mutate(mes = month(fecha, label = TRUE)) 

data_mensual <- filtrada %>%
  group_by(hy, mes) %>%
  summarize(porcentaje_faltante_mensual = median(porcentaje_faltante, na.rm = TRUE)) %>%
  ungroup()
```

```{r}
# Gráfico radial de porcentaje faltante mensual con etiquetas mejor posicionadas
p_radial_faltante_mensual <- ggplot(data_mensual, aes(x = mes, y = porcentaje_faltante_mensual)) +
  geom_line(aes(group = 1), color = "red", size = 1) +  # Línea roja que conecta los valores de porcentaje faltante
  geom_point(color = "red", size = 3) +  # Puntos en cada mes para marcar el porcentaje faltante
  geom_text(aes(label = paste0(round(porcentaje_faltante_mensual, 1), "%")), 
            vjust = -0.5, nudge_y = 17, color = "black", size = 3) +  # Ajuste de posición y tamaño de etiquetas
  coord_polar(start = 0) +  # Convertir a coordenadas polares
  scale_y_continuous(limits = c(0, 100), breaks = seq(0, 100, by = 20)) +
  labs(x = "Mes", y = "Porcentaje Faltante", title = paste("Porcentaje Faltante para Llenado del Embalse (Mensual) en Cuenca", cuenca_con_mas_embalses)) +
  theme_minimal() +
  theme(
    axis.text.x = element_text(size = 10, angle = 0, hjust = 0.5),
    axis.text.y = element_blank(),
    axis.ticks = element_blank(),
    panel.grid.major.y = element_line(color = "gray80"),  # Líneas radiales
    plot.title = element_text(hjust = 0.5)
  )

# Mostrar el gráfico
p_radial_faltante_mensual
```
